{"version":3,"file":"register-6380b233.js","sources":["../../../../pages/auth/register.vue"],"sourcesContent":["<template>\r\n  <section class=\"section\">\r\n    <div class=\"bg is-hidden-mobile\"></div>\r\n    <div class=\"container\">\r\n      <h1 class=\"page-title\">{{ $t(\"register\") }}</h1>\r\n      <div class=\"grids is-2-desktop is-1-mobile margin-top-30 gap-30-desktop\">\r\n        <div class=\"left\">\r\n          <form action=\"\" class=\"grids is-2-desktop is-1-mobile gap-20-desktop\" @submit.prevent=\"register()\">\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"fullname\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" v-model=\"state.name\" class=\"input\" :placeholder=\"$t('fullname')\" />\r\n                <div v-if=\"v$.name.$error\" class=\"err\">\r\n                  {{ v$.name.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"dob\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"number\" v-model=\"state.birtYear\" class=\"input\" placeholder=\"1999\" />\r\n                <div v-if=\"v$.birtYear.$error\" class=\"err\">\r\n                  {{ v$.birtYear.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"contact_number\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"number\" v-model=\"state.mobile\" class=\"input\" placeholder=\"922xxx93\" />\r\n                <div v-if=\"v$.mobile.$error\" class=\"err\">\r\n                  {{ v$.mobile.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"email\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" v-model=\"state.email\" class=\"input\" placeholder=\"email@gmail.com\" />\r\n                <div v-if=\"v$.email.$error\" class=\"err\">\r\n                  {{ v$.email.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"current_province\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <div class=\"select\">\r\n                  <select v-model=\"state.province\">\r\n                    <option value=\"\" disabled>Select dropdown</option>\r\n                    <option v-for=\"(i, index) in provinceInfo\" :key=\"index\" :value=\"i._id\">\r\n                      {{ i.name }}\r\n                    </option>\r\n                  </select>\r\n                  <div v-if=\"v$.province.$error\" class=\"err\">\r\n                    {{ v$.province.required.$message }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"occupation\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <div class=\"select\">\r\n                  <select v-model=\"state.occupation\">\r\n                    <option value=\"\" disabled>Select dropdown</option>\r\n                    <option v-for=\"(i, indx) in occupationInfo\" :key=\"indx\" :value=\"i._id\">\r\n                      {{ i.name }}\r\n                    </option>\r\n                  </select>\r\n                  <div v-if=\"v$.occupation.$error\" class=\"err\">\r\n                    {{ v$.occupation.required.$message }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"password\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" v-model=\"state.password\" class=\"input\" :placeholder=\"$t('password')\" />\r\n                <div v-if=\"v$.password.$error\" class=\"err\">\r\n                  {{ v$.password.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t(\"confirm_password\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" v-model=\"state.confirmPassword\" class=\"input\" :placeholder=\"$t('confirm_password')\" />\r\n                <div v-if=\"v$.confirmPassword.$error\" class=\"err\">\r\n                  {{ v$.confirmPassword.required.$message }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <br />\r\n          <p v-if=\"isError\" class=\"err2\">{{ isError }}</p>\r\n          <p v-if=\"response\" class=\"response\">{{ response }}</p>\r\n          <button type=\"submit\" class=\"button main margin-top-20 margin-bottom-10\" @click=\"register()\">\r\n            {{ $t(\"register\") }}\r\n          </button>\r\n\r\n          <p class=\"note\">\r\n            {{ $t(\"have_account\") }}\r\n            <a @click=\"router.push({ path: 'login' })\">{{ $t(\"login\") }}</a>\r\n          </p>\r\n        </div>\r\n        <div class=\"right\">\r\n          <InfoBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport InfoBox from \"~/components/auth/info-box.vue\";\r\nimport { required, helpers } from \"@vuelidate/validators\";\r\nimport { useVuelidate } from \"@vuelidate/core\";\r\nconst useCookies = useCookie('verifyToken')\r\nconst router = useRouter();\r\nconst axios = useNuxtApp().$axios;\r\nconst occupationInfo = ref<any>();\r\nconst provinceInfo = ref<any>();\r\nconst isError = ref<any>(\"\");\r\nconst response = ref<any>(\"\");\r\nconst state = reactive({\r\n  occupation: \"\",\r\n  province: \"\",\r\n  name: \"\",\r\n  birtYear: \"\",\r\n  mobile: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n});\r\nconst rules = {\r\n  occupation: {\r\n    required: helpers.withMessage(\"Occupation cannot be empty\", required),\r\n  },\r\n  province: {\r\n    required: helpers.withMessage(\"Province cannot be empty\", required),\r\n  },\r\n  name: { required: helpers.withMessage(\"Name cannot be empty\", required) },\r\n  birtYear: {\r\n    required: helpers.withMessage(\"Birt Year cannot be empty\", required),\r\n  },\r\n  mobile: { required: helpers.withMessage(\"Mobile cannot be empty\", required) },\r\n  password: {\r\n    required: helpers.withMessage(\"Password cannot be empty\", required),\r\n  },\r\n  confirmPassword: {\r\n    required: helpers.withMessage(\"Confirm password cannot be empty\", required),\r\n  },\r\n  email: {\r\n    required: helpers.withMessage(\r\n      \"email cannot be empty and must be email\",\r\n      required\r\n    ),\r\n  },\r\n};\r\nconst v$ = useVuelidate(rules, state);\r\nconst fetchCategory = async () => {\r\n  const data = await axios.post(`get-reuses-list/Occupation`);\r\n  occupationInfo.value = data.data.info;\r\n};\r\nconst fetchProvince = async () => {\r\n  const data = await axios.post(`get-reuses-list/Province`);\r\n  provinceInfo.value = data.data.info;\r\n};\r\nconst register = async () => {\r\n  const result = await v$.value.$validate();\r\n  if (!result) return;\r\n  await axios\r\n    .post(`user-register`, {\r\n      name: state.name,\r\n      dob: state.birtYear,\r\n      mobile: state.mobile,\r\n      email: state.email,\r\n      password: state.password,\r\n      confirmPassword: state.confirmPassword,\r\n      provinceId: state.province,\r\n      occupationId: state.occupation,\r\n    })\r\n    .then((res: any) => {\r\n      if (res.status === 201) {\r\n        response.value = \"Register succeed\";\r\n        useCookies.value = res.data.token\r\n        isError.value = \"\";\r\n        setTimeout(() => {\r\n          router.push('/auth/otp')\r\n        }, 1500);\r\n      }\r\n    })\r\n    .catch((e: any) => {\r\n      isError.value = e.response.data.message;\r\n    });\r\n};\r\n\r\nfetchCategory();\r\nfetchProvince();\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nsection {\r\n  position: relative;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n}\r\n\r\n.bg {\r\n  content: \"\";\r\n  width: 30%;\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  background-color: var(--sub-color);\r\n}\r\n\r\n.left {}\r\n\r\n.right {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n}\r\n\r\n.note {\r\n  a {\r\n    color: var(--sub-color);\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.err {\r\n  font-size: 13px;\r\n  color: red;\r\n}\r\n\r\n.err2 {\r\n  font-size: 16px;\r\n  color: red;\r\n}\r\n\r\n.response {\r\n  font-size: 16px;\r\n  color: rgb(18, 190, 56);\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsHmB,cAAU,aAAa;AAC3B,cAAU;AACnB,UAAA,QAAQ,WAAa,EAAA;AAC3B,UAAM,iBAAiB;AACvB,UAAM,eAAe;AACf,UAAA,UAAU,IAAS,EAAE;AACrB,UAAA,WAAW,IAAS,EAAE;AAC5B,UAAM,QAAQ,SAAS;AAAA,MACrB,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,UAAU;AAAA,MACV,iBAAiB;AAAA,IAAA,CAClB;AACD,UAAM,QAAQ;AAAA,MACZ,YAAY;AAAA,QACV,UAAU,QAAQ,YAAY,8BAA8B,QAAQ;AAAA,MACtE;AAAA,MACA,UAAU;AAAA,QACR,UAAU,QAAQ,YAAY,4BAA4B,QAAQ;AAAA,MACpE;AAAA,MACA,MAAM,EAAE,UAAU,QAAQ,YAAY,wBAAwB,QAAQ,EAAE;AAAA,MACxE,UAAU;AAAA,QACR,UAAU,QAAQ,YAAY,6BAA6B,QAAQ;AAAA,MACrE;AAAA,MACA,QAAQ,EAAE,UAAU,QAAQ,YAAY,0BAA0B,QAAQ,EAAE;AAAA,MAC5E,UAAU;AAAA,QACR,UAAU,QAAQ,YAAY,4BAA4B,QAAQ;AAAA,MACpE;AAAA,MACA,iBAAiB;AAAA,QACf,UAAU,QAAQ,YAAY,oCAAoC,QAAQ;AAAA,MAC5E;AAAA,MACA,OAAO;AAAA,QACL,UAAU,QAAQ;AAAA,UAChB;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IAAA;AAEI,UAAA,KAAK,aAAa,OAAO,KAAK;AACpC,UAAM,gBAAgB,YAAY;AAChC,YAAM,OAAO,MAAM,MAAM,KAAK,4BAA4B;AAC3C,qBAAA,QAAQ,KAAK,KAAK;AAAA,IAAA;AAEnC,UAAM,gBAAgB,YAAY;AAChC,YAAM,OAAO,MAAM,MAAM,KAAK,0BAA0B;AAC3C,mBAAA,QAAQ,KAAK,KAAK;AAAA,IAAA;AA+BnB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}