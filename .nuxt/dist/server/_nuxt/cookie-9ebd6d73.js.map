{"version":3,"file":"cookie-9ebd6d73.js","sources":["../../../../node_modules/nuxt/dist/app/composables/ssr.js","../../../../node_modules/nuxt/dist/app/composables/cookie.js"],"sourcesContent":["import { setResponseStatus as _setResponseStatus, appendHeader, getRequestHeaders } from \"h3\";\nimport { useNuxtApp } from \"../nuxt.js\";\nexport function useRequestEvent(nuxtApp = useNuxtApp()) {\n  return nuxtApp.ssrContext?.event;\n}\nexport function useRequestHeaders(include) {\n  if (import.meta.client) {\n    return {};\n  }\n  const event = useRequestEvent();\n  const headers = event ? getRequestHeaders(event) : {};\n  if (!include) {\n    return headers;\n  }\n  return Object.fromEntries(include.map((key) => key.toLowerCase()).filter((key) => headers[key]).map((key) => [key, headers[key]]));\n}\nexport function useRequestFetch() {\n  if (import.meta.client) {\n    return globalThis.$fetch;\n  }\n  return useRequestEvent()?.$fetch || globalThis.$fetch;\n}\nexport function setResponseStatus(arg1, arg2, arg3) {\n  if (import.meta.client) {\n    return;\n  }\n  if (arg1 && typeof arg1 !== \"number\") {\n    return _setResponseStatus(arg1, arg2, arg3);\n  }\n  return _setResponseStatus(useRequestEvent(), arg1, arg2);\n}\nexport function prerenderRoutes(path) {\n  if (!process.server || !process.env.prerender) {\n    return;\n  }\n  const paths = Array.isArray(path) ? path : [path];\n  appendHeader(useRequestEvent(), \"x-nitro-prerender\", paths.map((p) => encodeURIComponent(p)).join(\", \"));\n}\n","import { customRef, getCurrentScope, nextTick, onScopeDispose, ref, watch } from \"vue\";\nimport { parse, serialize } from \"cookie-es\";\nimport { deleteCookie, getCookie, getRequestHeader, setCookie } from \"h3\";\nimport destr from \"destr\";\nimport { isEqual } from \"ohash\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { useRequestEvent } from \"./ssr.js\";\nconst CookieDefaults = {\n  path: \"/\",\n  watch: true,\n  decode: (val) => destr(decodeURIComponent(val)),\n  encode: (val) => encodeURIComponent(typeof val === \"string\" ? val : JSON.stringify(val))\n};\nexport function useCookie(name, _opts) {\n  const opts = { ...CookieDefaults, ..._opts };\n  const cookies = readRawCookies(opts) || {};\n  let delay;\n  if (opts.maxAge !== void 0) {\n    delay = opts.maxAge * 1e3;\n  } else if (opts.expires) {\n    delay = opts.expires.getTime() - Date.now();\n  }\n  const hasExpired = delay !== void 0 && delay <= 0;\n  const cookieValue = hasExpired ? void 0 : cookies[name] ?? opts.default?.();\n  const cookie = import.meta.client && delay && !hasExpired ? cookieRef(cookieValue, delay) : ref(cookieValue);\n  if (import.meta.dev && hasExpired) {\n    console.warn(`[nuxt] not setting cookie \\`${name}\\` as it has already expired.`);\n  }\n  if (import.meta.client) {\n    const channel = typeof BroadcastChannel === \"undefined\" ? null : new BroadcastChannel(`nuxt:cookies:${name}`);\n    const callback = () => {\n      writeClientCookie(name, cookie.value, opts);\n      channel?.postMessage(opts.encode(cookie.value));\n    };\n    let watchPaused = false;\n    if (getCurrentScope()) {\n      onScopeDispose(() => {\n        watchPaused = true;\n        callback();\n        channel?.close();\n      });\n    }\n    if (channel) {\n      channel.onmessage = (event) => {\n        watchPaused = true;\n        cookie.value = opts.decode(event.data);\n        nextTick(() => {\n          watchPaused = false;\n        });\n      };\n    }\n    if (opts.watch) {\n      watch(\n        cookie,\n        () => {\n          if (watchPaused) {\n            return;\n          }\n          callback();\n        },\n        { deep: opts.watch !== \"shallow\" }\n      );\n    } else {\n      callback();\n    }\n  } else if (import.meta.server) {\n    const nuxtApp = useNuxtApp();\n    const writeFinalCookieValue = () => {\n      if (!isEqual(cookie.value, cookies[name])) {\n        writeServerCookie(useRequestEvent(nuxtApp), name, cookie.value, opts);\n      }\n    };\n    const unhook = nuxtApp.hooks.hookOnce(\"app:rendered\", writeFinalCookieValue);\n    nuxtApp.hooks.hookOnce(\"app:error\", () => {\n      unhook();\n      return writeFinalCookieValue();\n    });\n  }\n  return cookie;\n}\nfunction readRawCookies(opts = {}) {\n  if (import.meta.server) {\n    return parse(getRequestHeader(useRequestEvent(), \"cookie\") || \"\", opts);\n  } else if (import.meta.client) {\n    return parse(document.cookie, opts);\n  }\n}\nfunction serializeCookie(name, value, opts = {}) {\n  if (value === null || value === void 0) {\n    return serialize(name, value, { ...opts, maxAge: -1 });\n  }\n  return serialize(name, value, opts);\n}\nfunction writeClientCookie(name, value, opts = {}) {\n  if (import.meta.client) {\n    document.cookie = serializeCookie(name, value, opts);\n  }\n}\nfunction writeServerCookie(event, name, value, opts = {}) {\n  if (event) {\n    if (value !== null && value !== void 0) {\n      return setCookie(event, name, value, opts);\n    }\n    if (getCookie(event, name) !== void 0) {\n      return deleteCookie(event, name, opts);\n    }\n  }\n}\nfunction cookieRef(value, delay) {\n  let timeout;\n  onScopeDispose(() => {\n    clearTimeout(timeout);\n  });\n  return customRef((track, trigger) => {\n    return {\n      get() {\n        track();\n        return value;\n      },\n      set(newValue) {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          value = void 0;\n          trigger();\n        }, delay);\n        value = newValue;\n        trigger();\n      }\n    };\n  });\n}\n"],"names":[],"mappings":";;;;;;AAEO,SAAS,gBAAgB,UAAU,cAAc;;AACtD,UAAO,aAAQ,eAAR,mBAAoB;AAC7B;ACGA,MAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ,CAAC,QAAQ,MAAM,mBAAmB,GAAG,CAAC;AAAA,EAC9C,QAAQ,CAAC,QAAQ,mBAAmB,OAAO,QAAQ,WAAW,MAAM,KAAK,UAAU,GAAG,CAAC;AACzF;AACO,SAAS,UAAU,MAAM,OAAO;;AACrC,QAAM,OAAO,EAAE,GAAG,gBAAgB,GAAG,MAAK;AAC1C,QAAM,UAAU,eAAe,IAAI,KAAK,CAAA;AACxC,MAAI;AACJ,MAAI,KAAK,WAAW,QAAQ;AAC1B,YAAQ,KAAK,SAAS;AAAA,EAC1B,WAAa,KAAK,SAAS;AACvB,YAAQ,KAAK,QAAQ,QAAO,IAAK,KAAK;EACvC;AACD,QAAM,aAAa,UAAU,UAAU,SAAS;AAChD,QAAM,cAAc,aAAa,SAAS,QAAQ,IAAI,OAAK,UAAK,YAAL;AAC3D,QAAM,SAAsF,IAAI,WAAW;AAyC5E;AAC7B,UAAM,UAAU;AAChB,UAAM,wBAAwB,MAAM;AAClC,UAAI,CAAC,QAAQ,OAAO,OAAO,QAAQ,IAAI,CAAC,GAAG;AACzC,0BAAkB,gBAAgB,OAAO,GAAG,MAAM,OAAO,OAAO,IAAI;AAAA,MACrE;AAAA,IACP;AACI,UAAM,SAAS,QAAQ,MAAM,SAAS,gBAAgB,qBAAqB;AAC3E,YAAQ,MAAM,SAAS,aAAa,MAAM;AACxC;AACA,aAAO,sBAAqB;AAAA,IAClC,CAAK;AAAA,EACF;AACD,SAAO;AACT;AACA,SAAS,eAAe,OAAO,IAAI;AACT;AACtB,WAAO,MAAM,iBAAiB,gBAAe,GAAI,QAAQ,KAAK,IAAI,IAAI;AAAA,EAGvE;AACH;AAYA,SAAS,kBAAkB,OAAO,MAAM,OAAO,OAAO,CAAA,GAAI;AACxD,MAAI,OAAO;AACT,QAAI,UAAU,QAAQ,UAAU,QAAQ;AACtC,aAAO,UAAU,OAAO,MAAM,OAAO,IAAI;AAAA,IAC1C;AACD,QAAI,UAAU,OAAO,IAAI,MAAM,QAAQ;AACrC,aAAO,aAAa,OAAO,MAAM,IAAI;AAAA,IACtC;AAAA,EACF;AACH;","x_google_ignoreList":[0,1]}