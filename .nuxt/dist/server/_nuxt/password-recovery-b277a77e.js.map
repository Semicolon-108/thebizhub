{"version":3,"file":"password-recovery-b277a77e.js","sources":["../../../../pages/auth/password-recovery.vue"],"sourcesContent":["<template>\r\n  <section class=\"section\">\r\n    <div class=\"bg is-hidden-mobile\"></div>\r\n    <div class=\"container\">\r\n      <h1 class=\"page-title\">Reset Password</h1>\r\n\r\n      <div class=\"grids is-2-desktop is-1-mobile margin-top-30 gap-30\">\r\n        <div class=\"left\">\r\n          <form action=\"\" class=\"grids is-1-desktop is-1-mobile gap-20\">\r\n            <div class=\"field\">\r\n              <label for=\"\">{{ $t('email') }} <span>*</span></label>\r\n              <div class=\"control has-addon\">\r\n                <input type=\"text\" class=\"input\" placeholder=\"E-mail\" v-model=\"email\" />\r\n                <a @click=\"sendRequest()\">Get Code</a>\r\n              </div>\r\n              <p v-if=\"emailSucceed\" style=\"color:#0eb56d\">{{ emailSucceed }}</p>\r\n              <p v-if=\"emailError\" style=\"color:red\">{{ emailError }}</p>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">Enter OTP code from Inbox<span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" class=\"input\" placeholder=\"Fill OTP and Press Enter\" v-model=\"verifyCode\"\r\n                  @keyup.enter=\"verify\" />\r\n              </div>\r\n              <p v-if=\"otpError\" style=\"color:red\">{{ otpError }}</p>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\">Set new password <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" class=\"input\" placeholder=\"Password\" :disabled=\"!isResetPassword\" v-model=\"password\" />\r\n              </div>\r\n            </div>\r\n            <p v-if=\"passwordError\" style=\"color: red;\">{{ passwordError }}</p>\r\n            <p v-if=\"resetSucceed\" style=\"color:#0eb56d\">{{ resetSucceed }}</p>\r\n          </form>\r\n\r\n          <button class=\"button main margin-top-20 margin-bottom-10\" @click=\"changePassword()\">\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n        <div class=\"right\">\r\n          <InfoBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport InfoBox from \"~/components/auth/info-box.vue\";\r\nconst axios = useNuxtApp().$axios;\r\nconst router = useRouter();\r\n\r\nconst email = ref<any>()\r\nconst verifyCode = ref<any>()\r\n\r\nconst emailError = ref<any>(\"\")\r\nconst emailSucceed = ref<any>(\"\")\r\n\r\nconst password = ref<any>()\r\nconst isResetPassword = ref<any>(false)\r\nconst passwordError = ref<any>(\"\")\r\nconst resetSucceed = ref<any>(\"\")\r\n\r\nconst otpError = ref<any>(\"\")\r\nconst useCookies = useCookie('verifyToken')\r\nconst sendRequest = async () => {\r\n  if (!email.value) return emailError.value = \"Please fill email first\"\r\n  emailError.value = \"\"\r\n  await axios.get(`request-toverify?email=${email.value}`).then((res: any) => {\r\n    if (res.status === 200) {\r\n      useCookies.value = res.data.token\r\n      emailSucceed.value = \"OTP has sent, Please check your email\"\r\n      setTimeout(() => {\r\n        emailSucceed.value = \"\"\r\n      }, 4500)\r\n    }\r\n  }).catch((e: any) => {\r\n    emailError.value = e.response.data.message\r\n    if (e.response.status === 429) {\r\n      emailError.value = \"Sorry, You have too many request, please try again after 10 minutes\"\r\n    }\r\n  })\r\n}\r\nconst verify = async () => {\r\n  if (!useCookies.value) return otpError.value = \"Not found your verifyTOken yet\"\r\n  if (!verifyCode.value) return otpError.value = \"Please fill your verifyCode\"\r\n  await axios.post(`verify-from-request`, {\r\n    verifyCode: verifyCode.value,\r\n    verifyToken: useCookies.value\r\n  }).then((res: any) => {\r\n    if (res.status === 201) {\r\n      useCookies.value = res.data.token\r\n      isResetPassword.value = true\r\n      otpError.value = \"\"\r\n    }\r\n  }).catch((e: any) => {\r\n    otpError.value = \"\"\r\n    if (e.response.status === 501) {\r\n      otpError.value = \"Can not verify\"\r\n    } else {\r\n      otpError.value = e.response.data.message\r\n    }\r\n\r\n  })\r\n}\r\nconst changePassword = async () => {\r\n  if (!useCookies.value || !password.value) return passwordError.value = \"Please fill password\"\r\n  passwordError.value = \"\"\r\n  await axios.post(`reset-password`, {\r\n    newPassword: password.value,\r\n    token: useCookies.value\r\n  }).then((res: any) => {\r\n    if (res.status === 201) {\r\n      resetSucceed.value = res.data.message\r\n      setTimeout(() => {\r\n        router.push('/auth/login')\r\n      }, 3000)\r\n    }\r\n  }).catch((e: any) => {\r\n    if (e.response.status === 501) {\r\n      passwordError.value = \"Can not reset password, Please try again\"\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\nsection {\r\n  position: relative;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n}\r\n\r\n.bg {\r\n  content: \"\";\r\n  width: 30%;\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  background-color: var(--sub-color);\r\n}\r\n\r\n.right {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n\r\n  .box {\r\n    position: relative;\r\n    display: inline-block;\r\n    background-color: var(--main-color);\r\n    color: #fff;\r\n    border-radius: 10px;\r\n    padding: 30px 40px;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      display: block;\r\n      position: absolute;\r\n      left: -15px;\r\n      top: -15px;\r\n      height: 30px;\r\n      width: 30px;\r\n      background-color: var(--sub-color);\r\n      border-radius: 5px;\r\n    }\r\n\r\n    .box-title {\r\n      font-size: var(--xlg-font);\r\n      font-weight: 700;\r\n      text-transform: uppercase;\r\n    }\r\n\r\n    ul {\r\n      li {\r\n        display: flex;\r\n        margin-bottom: 10px;\r\n\r\n        span {\r\n          min-width: 20px;\r\n          max-width: 20px;\r\n          color: var(--sub-color);\r\n        }\r\n\r\n        p {\r\n          line-height: 1.5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  //box\r\n\r\n  .social-icons {\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    a {\r\n      cursor: pointer;\r\n\r\n      i {\r\n        color: #fff;\r\n        font-size: var(--xlg-font);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.note {\r\n  a {\r\n    color: var(--sub-color);\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAiDc,eAAa,EAAA;AACZ,cAAU;AAEzB,UAAM,QAAQ;AACd,UAAM,aAAa;AAEb,UAAA,aAAa,IAAS,EAAE;AACxB,UAAA,eAAe,IAAS,EAAE;AAEhC,UAAM,WAAW;AACX,UAAA,kBAAkB,IAAS,KAAK;AAChC,UAAA,gBAAgB,IAAS,EAAE;AAC3B,UAAA,eAAe,IAAS,EAAE;AAE1B,UAAA,WAAW,IAAS,EAAE;AACT,cAAU,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}