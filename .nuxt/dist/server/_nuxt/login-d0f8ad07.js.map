{"version":3,"file":"login-d0f8ad07.js","sources":["../../../../pages/auth/login.vue"],"sourcesContent":["<template>\r\n  <section class=\"section\">\r\n    <div class=\"bg is-hidden-mobile\"></div>\r\n    <div class=\"container\">\r\n      <h1 class=\"page-title\">{{ $t(\"login\") }}</h1>\r\n\r\n      <div class=\"grids is-5-desktop is-1-mobile margin-top-30 gap-30-desktop\">\r\n        <div class=\"left span-2-desktop\">\r\n          <form action=\"\" class=\"grids is-1-desktop is-1-mobile gap-20-desktop\">\r\n            <div class=\"field\">\r\n              <label for=\"\"> {{ $t(\"contact_number\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"text\" class=\"input\" placeholder=\"922xxx93\" v-model=\"mobile\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"field\">\r\n              <label for=\"\"> {{ $t(\"password\") }} <span>*</span></label>\r\n              <div class=\"control\">\r\n                <input type=\"password\" class=\"input\" placeholder=\"password\" v-model=\"password\" @keyup.enter=\"login()\"/>\r\n                <NuxtLink to=\"password-recovery\">\r\n                  {{ $t(\"forgot_password\") }}</NuxtLink>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <p style=\"color:red\">{{ isError }}</p>\r\n          <button class=\"button main margin-top-20 margin-bottom-10\" @click=\"login()\">\r\n            {{ $t(\"login\") }}\r\n          </button>\r\n\r\n          <p class=\"note\">\r\n            {{ $t(\"dont_have_account\") }}\r\n            <a @click=\"router.push({ path: 'register' })\">{{\r\n              $t(\"register\")\r\n            }}</a>\r\n          </p>\r\n        </div>\r\n        <div class=\"right span-3-desktop\">\r\n          <InfoBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nconst axios = useNuxtApp().$axios;\r\nimport InfoBox from \"../../components/auth/info-box.vue\";\r\nconst router = useRouter();\r\nconst isError = ref<any>(\"\")\r\nconst mobile = ref<any>(\"\")\r\nconst password = ref<any>(\"\")\r\nconst useCookies = useCookie('thebizhub-token')\r\nimport { useAuthStore } from '@/stores/store'\r\nconst setTokenToStore = useAuthStore()\r\n\r\nconst login = async () => {\r\n  if (!mobile.value || !password.value) return isError.value = \"Please fill mobile or password\"\r\n  isError.value = \"\"\r\n  await axios\r\n    .post(`client-login`, {\r\n      mobile: mobile.value,\r\n      password: password.value\r\n    })\r\n    .then((res: any) => {\r\n      if (res.status === 200) {\r\n        useCookies.value = res.data.token\r\n        setTokenToStore.setToken(res.data.token)\r\n        router.push('/')\r\n      }\r\n    }).catch((e: any) => {\r\n      isError.value = e.response.data.message;\r\n    });\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\nsection {\r\n  position: relative;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n}\r\n\r\n.right {\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n}\r\n\r\n.note {\r\n  a {\r\n    color: var(--sub-color);\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.bg {\r\n  content: \"\";\r\n  width: 30%;\r\n  display: block;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  background-color: var(--sub-color);\r\n}\r\n</style>\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6Cc,eAAa,EAAA;AAEZ,cAAU;AACnB,UAAA,UAAU,IAAS,EAAE;AACrB,UAAA,SAAS,IAAS,EAAE;AACpB,UAAA,WAAW,IAAS,EAAE;AACT,cAAU,iBAAiB;AAEtB,iBAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}